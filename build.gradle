plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.flywaydb.flyway' version '9.22.3'
}

group = 'com.assist'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://viesapi.eu/maven/releases"
	}
}

dependencies {
	implementation 'software.amazon.awssdk:s3:2.20.63'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.apache.httpcomponents:httpclient:4.5.14'
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.apache.poi:poi-ooxml:5.2.3' // Adjust the version as needed
	implementation 'org.apache.poi:poi:5.2.3'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.security:spring-security-test'
	//developmentOnly"org.springframework.boot:spring-boot-docker-compose"
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/auctions'
	user = 'postgres'
	password = 'postgres'
	schemas = ['public']
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	systemProperty 'spring.profiles.active', 'test'
}